/**
 * FontDetect - A simple library to detect if an internal font is present or an external font got loaded.
 * 
 * TO USE: 
 *     Include jQuery. This was developed using jQuery 1.7.
 *     Include this file. If desired, you can load this file after the BODY.
 *     Create a new fontdetect().
 *     After you load the fonts you want to test, call either of these methods:
 *     
 *         fontDetect = new fontdetect();
 *         
 *         // Checks that the font is loaded now.
 *         isLoaded = fontDetect.isFontLoaded(fontname);
 *     
 *         // Polls for the font getting loaded and calls a callback when it does.
 *         fontDetect.onFontLoaded(fontname, callback [, {onFail: xxx, msInterval: yyy, msTimeout: zzz}]);
 *     
 *     Note: For externally loaded fonts, you may have to wait for more than a second to get a reliable 
 *     answer. Internal browser fonts can be detected immediately.
 *     
 *         // Determines which font in the font stack is being used for a given element.
 *         sFontname = fontDetect.whichFont(element);
 *     
 * @author      Jennifer Simonds
 * @copyright   2012 Jennifer Simonds
 * @license MIT License http://opensource.org/licenses/MIT
 * 
 * @version 1.0  2012-04-11 Created.
 * 
 * @version 1.0  2012-04-12 Refined the algorithm to use fewer helper elements, more reference fonts,
 *                              and quicker detection of a nonexistent font.
 * 
 * @version 2.0  2012-06-01 Added onFontLoaded for a callback to execute as soon as the font is 
 *                              detected or when a timeout has passed without loading. Added whichFont
 *                              to determine which font actually loaded. Changed the license from BSD 
 *                              3-clause to MIT.
 *                              
 * @version 2.1  2012-08-12 Fixed a bug that caused horizontal scrollbar to show up in FF & IE.
 *                              (Thanks to Geoff Beaumont for the bug report & fix)
 */
fontdetect=function(){var _isInitialized=false;var _aFallbackFonts=["serif","sans-serif","monospace","cursive","fantasy"];function _init(){if(_isInitialized){return;}_isInitialized=true;$("body > :first-child").before('<div id="fontdetectHelper"><span>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</span></div>');$("#fontdetectHelper").css({"position":"absolute","visibility":"hidden","top":"-200px","left":"-100000px","width":"100000px","height":"200px","font-size":"100px"});}return{onFontLoaded:function(p_cssFontName,p_onLoad,p_onFail,p_options){if(!p_cssFontName){return;}var msInterval=(p_options&&p_options.msInterval)?p_options.msInterval:100;var msTimeout=(p_options&&p_options.msTimeout)?p_options.msTimeout:2000;if(!p_onLoad&&!p_onFail){return;}if(!_isInitialized){_init();}if(this.isFontLoaded(p_cssFontName)){if(p_onLoad){p_onLoad(p_cssFontName);}return;}var outerThis=this;var utStart=new Date().getTime();var idInterval=setInterval(function(){if(outerThis.isFontLoaded(p_cssFontName)){clearInterval(idInterval);p_onLoad(p_cssFontName);return;}else{var utNow=new Date().getTime();if((utNow-utStart)>msTimeout){clearInterval(idInterval);if(p_onFail){p_onFail(p_cssFontName);}}}},msInterval);},isFontLoaded:function(p_cssFontName){var wThisFont=0;var wPrevFont=0;if(!_isInitialized){_init();}for(var ix=0;ix<_aFallbackFonts.length;++ix){var $helperSpan=$("#fontdetectHelper > SPAN");$helperSpan.css("font-family",p_cssFontName+","+_aFallbackFonts[ix]);wThisFont=$helperSpan.width();if(ix>0&&wThisFont!=wPrevFont){return false;}wPrevFont=wThisFont;}return true;},whichFont:function(p_element){var sStack=$(p_element).css("font-family");var aStack=sStack.split(",");var sFont=aStack.shift();while(sFont){sFont=sFont.replace(/^\s*['"]?\s*([^'"]*)\s*['"]?\s*$/,"$1");if(this.isFontLoaded(sFont)){return sFont;}sFont=aStack.shift();}return null;}};}();
